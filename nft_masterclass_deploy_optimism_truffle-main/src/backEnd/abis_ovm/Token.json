{
  "contractName": "Token",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+ovm+commit.c88bc4b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/zed/Desktop/DAPP_UNIVERSITY/NFT_MASTERCLASS/nft_masterclass_deploy_optimism_truffle/src/backEnd/contracts_ovm/Token.sol\":\"Token\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"/Users/zed/Desktop/DAPP_UNIVERSITY/NFT_MASTERCLASS/nft_masterclass_deploy_optimism_truffle/src/backEnd/contracts_ovm/Token.sol\":{\"keccak256\":\"0x3712b9c5f93ca6ed0014fbff8fe129e4ace4ae995dc5335c2e41ebf5d767fc2a\",\"license\":\"MIT LICENSE\",\"urls\":[\"bzz-raw://26b30bceee47169176e0d4f94d1c75f5eff87b5efd8f1d85c23147b8b769e5f2\",\"dweb:/ipfs/QmXZ4DCfQRA28xtGhb6uDBVK46TTKJccfHCEzsHuCT2iJk\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001957600080610016610a6e565b50505b50600436106100a25760003560e01c806306fdde03146100b0578063095ea7b31461012f57806318160ddd1461017857806323b872dd14610192578063313ce567146101d157806339509351146101ef57806370a082311461022457806395d89b4114610253578063a457c2d71461025b578063a9059cbb14610290578063dd62ed3e146102c5575b6000806100ad610a6e565b50505b6100b86102fc565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156100f45780820151838201526020016100dc565b50505050905090810190601f1680156101215780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101646004803603604081101561014e5760008061014b610a6e565b50505b506001600160a01b0381351690602001356103b9565b604051901515815260200160405180910390f35b6101806103d6565b60405190815260200160405180910390f35b610164600480360360608110156101b1576000806101ae610a6e565b50505b506001600160a01b038135811691602081013590911690604001356103e7565b6101d961047b565b60405160ff909116815260200160405180910390f35b6101646004803603604081101561020e5760008061020b610a6e565b50505b506001600160a01b038135169060200135610497565b6101806004803603602081101561024357600080610240610a6e565b50505b50356001600160a01b03166104fc565b6100b8610522565b6101646004803603604081101561027a57600080610277610a6e565b50505b506001600160a01b0381351690602001356105c8565b610164600480360360408110156102af576000806102ac610a6e565b50505b506001600160a01b03813516906020013561063e565b610180600480360360408110156102e4576000806102e1610a6e565b50505b506001600160a01b0381358116916020013516610652565b6060600380610309610ad9565b600181600116156101000203166002900480601f016020809104026020016040519081016040528181529190602083018280610343610ad9565b600181600116156101000203166002900480156103af5780601f1061037d57610100808361036f610ad9565b0402835291602001916103af565b820191906000526020600020905b81610394610ad9565b8152906001019060200180831161038b57829003601f168201915b5050505050905090565b60006103cd6103c66106f8565b8484610703565b50600192915050565b600060026103e2610ad9565b905090565b60006103f484848461082b565b610471846104006106f8565b61046c85604051606081016040526028808252610c3460208301396001600160a01b038a166000908152600160205260409020600061043d6106f8565b6001600160a01b03166001600160a01b03168152602001908152602001600020610465610ad9565b91906109c9565b610703565b5060019392505050565b6000806005610488610ad9565b906101000a900460ff16905090565b60006103cd6104a46106f8565b8461046c85600160006104b56106f8565b6001600160a01b03166001600160a01b031681526020019081526020016000206001600160a01b0389166000908152602091909152604090206104f6610ad9565b90610692565b6001600160a01b038116600090815260208190526040812061051c610ad9565b92915050565b606060048061052f610ad9565b600181600116156101000203166002900480601f016020809104026020016040519081016040528181529190602083018280610569610ad9565b600181600116156101000203166002900480156103af5780601f1061059557610100808361036f610ad9565b820191906000526020600020905b816105ac610ad9565b815290600101906020018083116105a357509395945050505050565b60006103cd6105d56106f8565b8461046c85604051606081016040526025808252610ca56020830139600160006105fd6106f8565b6001600160a01b03166001600160a01b031681526020019081526020016000206001600160a01b038a16600090815260209190915260409020610465610ad9565b60006103cd61064b6106f8565b848461082b565b6001600160a01b03821660009081526001602052604081206001600160a01b03831660009081526020919091526040902061068b610ad9565b9392505050565b60008282018381101561068b5760405162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b6044820152606401604051809103906106ef610a6e565b50509392505050565b60005a6103e2610b34565b6001600160a01b0383166107515760405162461bcd60e51b8152600401808060200182810382526024815260200180610c81602491396040019150506040518091039061074e610a6e565b50505b6001600160a01b03821661079f5760405162461bcd60e51b8152600401808060200182810382526022815260200180610bec602291396040019150506040518091039061079c610a6e565b50505b6001600160a01b038316600090815260016020528190604090206001600160a01b03841660009081526020919091526040902081906107dc610b7a565b505050816001600160a01b0316836001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405190815260200160405180910390a3505050565b6001600160a01b0383166108795760405162461bcd60e51b8152600401808060200182810382526025815260200180610c5c6025913960400191505060405180910390610876610a6e565b50505b6001600160a01b0382166108c75760405162461bcd60e51b8152600401808060200182810382526023815260200180610bc960239139604001915050604051809103906108c4610a6e565b50505b6108d2838383610a69565b61090d81604051606081016040526026808252610c0e60208301396001600160a01b0386166000908152602081905260409020610465610ad9565b6001600160a01b0384166000908152602081905260409020819061092f610b7a565b5050506001600160a01b03821660009081526020819052610958908290604090206104f6610ad9565b6001600160a01b0383166000908152602081905260409020819061097a610b7a565b505050816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405190815260200160405180910390a3505050565b60008184841115610a615760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a1d578082015183820152602001610a05565b50505050905090810190601f168015610a4a5780820380516001836020036101000a031916815260200191505b509250505060405180910390610a5e610a6e565b50505b505050900390565b505050565b632a2a7adb598160e01b8152600481016020815285602082015260005b86811015610aa6578086015182820160400152602001610a8b565b506020828760640184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b505050565b6303daa959598160e01b8152836004820152602081602483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051935060005b6040811015610a6957600082820152602001610b1d565b6373509064598160e01b8152602081600483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b80516000825293506020610b1d565b6322bd64c0598160e01b8152836004820152846024820152600081604483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b600081526020610b1d56fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "122:169:3:-:0;;;152:137;;;;;;;;;:::i;:::-;;;;;1958:145:8;;;;;;;;;;;-1:-1:-1;;;1958:145:8;;;;;;;;;;;;;;;-1:-1:-1;;;1958:145:8;;;;2040:5;;2032:13;;;;;;;;:::i;:::-;-1:-1:-1;2055:7:8;2065;;2055:17;;;;;;;;:::i;:::-;-1:-1:-1;2094:2:8;2082:9;:14;:9;:14;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;1958:145;;212:52:3::1;218:10;;;:::i;:::-;251;:8;:10::i;:::-;243:19;;237:2;:25;230:3;:33;212:5;;;:52;;:::i;:::-;122:169:::0;;3086:89:8;3135:5;;3159:9;;;:::i;:::-;;;;;;;;3152:16;;3086:89;:::o;7832:370::-;-1:-1:-1;;;;;7915:21:8;;7907:65;;;;-1:-1:-1;;;7907:65:8;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;7983:49;8012:1;8016:7;8025:6;7983:20;:49::i;:::-;8058:24;8075:6;8058:12;;;:::i;:::-;:16;;;;;;:24;;;;:::i;:::-;8043:39;:12;:39;;:::i;:::-;-1:-1:-1;;;;;;;;8113:18:8;;:9;:18;;;;;;;:30;;8136:6;;8113:18;;;;;:::i;:30::-;-1:-1:-1;;;;;8092:18:8;;:9;:18;;;;;;;;;;:51;;;;:::i;:::-;-1:-1:-1;;;;;;;;8158:37:8;;8175:1;8158:37;8188:6;8158:37;;;;;;;;;;;;;;7832:370;;:::o;10701:92::-;;;;:::o;2690:175:7:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;-1:-1:-1;;;2794:46:7;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;2857:1;2690:175;-1:-1:-1;;;2690:175:7:o;122:169:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;122:169:3;;;-1:-1:-1;122:169:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:169:3;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;",
  "deployedSourceMap": "122:169:3:-:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2168:89:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4244:166;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;4244:166:8;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3235:106;;;:::i;:::-;;;;;;;;;;;;;;;4877:317;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;4877:317:8;;;;;;;;;;;;;;;;;:::i;3086:89::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;5589:215;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;5589:215:8;;;;;;;;:::i;3399:125::-;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;3399:125:8;-1:-1:-1;;;;;3399:125:8;;:::i;2370:93::-;;;:::i;6291:266::-;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;6291:266:8;;;;;;;;:::i;3727:172::-;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;3727:172:8;;;;;;;;:::i;3957:149::-;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;3957:149:8;;;;;;;;;;:::i;2168:89::-;2213:13;2245:5;2238:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;:::o;4244:166::-;4327:4;4343:39;4352:12;:10;:12::i;:::-;4366:7;4375:6;4343:8;:39::i;:::-;-1:-1:-1;4399:4:8;4244:166;;;;:::o;3235:106::-;3296:7;3322:12;;;:::i;:::-;3315:19;;3235:106;:::o;4877:317::-;4983:4;4999:36;5009:6;5017:9;5028:6;4999:9;:36::i;:::-;5045:121;5054:6;5062:12;:10;:12::i;:::-;5076:89;5114:6;5076:89;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5076:19:8;;;;;;:11;:19;;;;;:33;5096:12;:10;:12::i;:::-;-1:-1:-1;;;;;5076:33:8;-1:-1:-1;;;;;5076:33:8;;;;;;;;;;;;;;:::i;:::-;:37;:89;:37;:89::i;:::-;5045:8;:121::i;:::-;-1:-1:-1;5183:4:8;4877:317;;;;;:::o;3086:89::-;3135:5;;3159:9;;;:::i;:::-;;;;;;;;3152:16;;3086:89;:::o;5589:215::-;5677:4;5693:83;5702:12;:10;:12::i;:::-;5716:7;5725:50;5764:10;5725:11;:25;5737:12;:10;:12::i;:::-;-1:-1:-1;;;;;5725:25:8;-1:-1:-1;;;;;5725:25:8;;;;;;;;;;;;-1:-1:-1;;;;;5725:34:8;;;;;;;;;;;;;;;;:::i;:::-;:38;;:50::i;3399:125::-;-1:-1:-1;;;;;3499:18:8;;3473:7;3499:18;;;;;;;;3473:7;3499:18;;;:::i;:::-;3492:25;3399:125;-1:-1:-1;;3399:125:8:o;2370:93::-;2417:13;2449:7;2442:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;2442:14:8;;2370:93;-1:-1:-1;;;;;2370:93:8:o;6291:266::-;6384:4;6400:129;6409:12;:10;:12::i;:::-;6423:7;6432:96;6471:15;6432:96;;;;;;;;;;;;;;;;:11;:25;6444:12;:10;:12::i;:::-;-1:-1:-1;;;;;6432:25:8;-1:-1:-1;;;;;6432:25:8;;;;;;;;;;;;-1:-1:-1;;;;;6432:34:8;;;;;;;;;;;;;;;;:::i;3727:172::-;3813:4;3829:42;3839:12;:10;:12::i;:::-;3853:9;3864:6;3829:9;:42::i;3957:149::-;-1:-1:-1;;;;;4072:18:8;;4046:7;4072:18;;;:11;:18;;;4046:7;4072:18;-1:-1:-1;;;;;4072:27:8;;;;;;;;;;;;;;;;:::i;:::-;4065:34;3957:149;-1:-1:-1;;;3957:149:8:o;2690:175:7:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;-1:-1:-1;;;2794:46:7;;;;;;;;;;;;-1:-1:-1;;;2794:46:7;;;;;;;;;;;;;;:::i;:::-;;;2857:1;2690:175;-1:-1:-1;;;2690:175:7:o;598:104:14:-;651:15;685:10;;;:::i;9355:340:8:-;-1:-1:-1;;;;;9456:19:8;;9448:68;;;;-1:-1:-1;;;9448:68:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;9534:21:8;;9526:68;;;;-1:-1:-1;;;9526:68:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;9605:18:8;;;;;;:11;:18;;9635:6;;9605:18;;;-1:-1:-1;;;;;9605:27:8;;;;;;;;;;;;;;:36;;;;:::i;:::-;;;;9672:7;-1:-1:-1;;;;;9656:32:8;9665:5;-1:-1:-1;;;;;9656:32:8;;9681:6;9656:32;;;;;;;;;;;;;;9355:340;;;:::o;7031:530::-;-1:-1:-1;;;;;7136:20:8;;7128:70;;;;-1:-1:-1;;;7128:70:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;7216:23:8;;7208:71;;;;-1:-1:-1;;;7208:71:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;7290:47;7311:6;7319:9;7330:6;7290:20;:47::i;:::-;7368:71;7390:6;7368:71;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7368:17:8;;:9;:17;;;;;;;;;;;;:::i;:71::-;-1:-1:-1;;;;;7348:17:8;;:9;:17;;;;;;;;;;:91;;;;:::i;:::-;-1:-1:-1;;;;;;;;7472:20:8;;:9;:20;;;;;;;:32;;7497:6;;7472:20;;;;;:::i;:32::-;-1:-1:-1;;;;;7449:20:8;;:9;:20;;;;;;;;;;:55;;;;:::i;:::-;;;;7536:9;-1:-1:-1;;;;;7519:35:8;7528:6;-1:-1:-1;;;;;7519:35:8;;7547:6;7519:35;;;;;;;;;;;;;;7031:530;;;:::o;5432:163:7:-;5518:7;5553:12;5545:6;;;;5537:29;;;;-1:-1:-1;;;5537:29:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;5583:5:7;;;5432:163::o;10701:92:8:-;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT LICENSE\npragma solidity ^0.7.6;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract Token is ERC20 {\n    constructor () ERC20('Optimism NFT Token', \"ONC\") {\n        _mint(msg.sender, 700 * (10 ** uint256(decimals()))); // 700 ONC tokens\n    }\n}\n",
  "sourcePath": "/Users/zed/Desktop/DAPP_UNIVERSITY/NFT_MASTERCLASS/nft_masterclass_deploy_optimism_truffle/src/backEnd/contracts_ovm/Token.sol",
  "ast": {
    "absolutePath": "/Users/zed/Desktop/DAPP_UNIVERSITY/NFT_MASTERCLASS/nft_masterclass_deploy_optimism_truffle/src/backEnd/contracts_ovm/Token.sol",
    "exportedSymbols": {
      "Context": [
        2565
      ],
      "ERC20": [
        2272
      ],
      "IERC20": [
        2350
      ],
      "SafeMath": [
        1769
      ],
      "Token": [
        1235
      ]
    },
    "id": 1236,
    "license": "MIT LICENSE",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1208,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 1209,
        "nodeType": "ImportDirective",
        "scope": 1236,
        "sourceUnit": 2273,
        "src": "65:55:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1210,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2272,
              "src": "140:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2272",
                "typeString": "contract ERC20"
              }
            },
            "id": 1211,
            "nodeType": "InheritanceSpecifier",
            "src": "140:5:3"
          }
        ],
        "contractDependencies": [
          2272,
          2350,
          2565
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1235,
        "linearizedBaseContracts": [
          1235,
          2272,
          2350,
          2565
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1233,
              "nodeType": "Block",
              "src": "202:87:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1219,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "218:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "218:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "373030",
                          "id": 1221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "230:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_700_by_1",
                            "typeString": "int_const 700"
                          },
                          "value": "700"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1228,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 1222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "237:2:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 1225,
                                      "name": "decimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1848,
                                      "src": "251:8:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                        "typeString": "function () view returns (uint8)"
                                      }
                                    },
                                    "id": 1226,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "251:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "id": 1224,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "243:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 1223,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "243:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1227,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "243:19:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "237:25:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1229,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "236:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "230:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1218,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2148,
                      "src": "212:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "212:52:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1232,
                  "nodeType": "ExpressionStatement",
                  "src": "212:52:3"
                }
              ]
            },
            "id": 1234,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4f7074696d69736d204e465420546f6b656e",
                    "id": 1214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "173:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_72189e37afa6bd9dd07fb5a0ef5809a1b6b2957fd11bfc3cc5428cc6086901bb",
                      "typeString": "literal_string \"Optimism NFT Token\""
                    },
                    "value": "Optimism NFT Token"
                  },
                  {
                    "hexValue": "4f4e43",
                    "id": 1215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "195:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_51bf2798693bc0ff073207a443540082013c0b6ec1ddc0106cd609d69796c78b",
                      "typeString": "literal_string \"ONC\""
                    },
                    "value": "ONC"
                  }
                ],
                "id": 1216,
                "modifierName": {
                  "id": 1213,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2272,
                  "src": "167:5:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$2272_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "167:34:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "164:2:3"
            },
            "returnParameters": {
              "id": 1217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "202:0:3"
            },
            "scope": 1235,
            "src": "152:137:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1236,
        "src": "122:169:3"
      }
    ],
    "src": "40:252:3"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/zed/Desktop/DAPP_UNIVERSITY/NFT_MASTERCLASS/nft_masterclass_deploy_optimism_truffle/src/backEnd/contracts_ovm/Token.sol",
      "exportedSymbols": {
        "Context": [
          2565
        ],
        "ERC20": [
          2272
        ],
        "IERC20": [
          2350
        ],
        "SafeMath": [
          1769
        ],
        "Token": [
          1235
        ]
      },
      "license": "MIT LICENSE"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".6"
          ]
        },
        "id": 1208,
        "name": "PragmaDirective",
        "src": "40:23:3"
      },
      {
        "attributes": {
          "SourceUnit": 2273,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "scope": 1236,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1209,
        "name": "ImportDirective",
        "src": "65:55:3"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            2272,
            2350,
            2565
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1235,
            2272,
            2350,
            2565
          ],
          "name": "Token",
          "scope": 1236
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC20",
                  "referencedDeclaration": 2272,
                  "type": "contract ERC20"
                },
                "id": 1210,
                "name": "UserDefinedTypeName",
                "src": "140:5:3"
              }
            ],
            "id": 1211,
            "name": "InheritanceSpecifier",
            "src": "140:5:3"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 1235,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1212,
                "name": "ParameterList",
                "src": "164:2:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1217,
                "name": "ParameterList",
                "src": "202:0:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2272,
                      "type": "type(contract ERC20)",
                      "value": "ERC20"
                    },
                    "id": 1213,
                    "name": "Identifier",
                    "src": "167:5:3"
                  },
                  {
                    "attributes": {
                      "hexvalue": "4f7074696d69736d204e465420546f6b656e",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"Optimism NFT Token\"",
                      "value": "Optimism NFT Token"
                    },
                    "id": 1214,
                    "name": "Literal",
                    "src": "173:20:3"
                  },
                  {
                    "attributes": {
                      "hexvalue": "4f4e43",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"ONC\"",
                      "value": "ONC"
                    },
                    "id": 1215,
                    "name": "Literal",
                    "src": "195:5:3"
                  }
                ],
                "id": 1216,
                "name": "ModifierInvocation",
                "src": "167:34:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2148,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 1218,
                            "name": "Identifier",
                            "src": "212:5:3"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 1219,
                                "name": "Identifier",
                                "src": "218:3:3"
                              }
                            ],
                            "id": 1220,
                            "name": "MemberAccess",
                            "src": "218:10:3"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "*",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "hexvalue": "373030",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 700",
                                  "value": "700"
                                },
                                "id": 1221,
                                "name": "Literal",
                                "src": "230:3:3"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "**",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "hexvalue": "3130",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "token": "number",
                                          "type": "int_const 10",
                                          "value": "10"
                                        },
                                        "id": 1222,
                                        "name": "Literal",
                                        "src": "237:2:3"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "uint256",
                                          "type_conversion": true
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint8",
                                                  "typeString": "uint8"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "type": "type(uint256)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "name": "uint256"
                                                },
                                                "id": 1223,
                                                "name": "ElementaryTypeName",
                                                "src": "243:7:3"
                                              }
                                            ],
                                            "id": 1224,
                                            "name": "ElementaryTypeNameExpression",
                                            "src": "243:7:3"
                                          },
                                          {
                                            "attributes": {
                                              "arguments": [
                                                null
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "tryCall": false,
                                              "type": "uint8",
                                              "type_conversion": false
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    null
                                                  ],
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 1848,
                                                  "type": "function () view returns (uint8)",
                                                  "value": "decimals"
                                                },
                                                "id": 1225,
                                                "name": "Identifier",
                                                "src": "251:8:3"
                                              }
                                            ],
                                            "id": 1226,
                                            "name": "FunctionCall",
                                            "src": "251:10:3"
                                          }
                                        ],
                                        "id": 1227,
                                        "name": "FunctionCall",
                                        "src": "243:19:3"
                                      }
                                    ],
                                    "id": 1228,
                                    "name": "BinaryOperation",
                                    "src": "237:25:3"
                                  }
                                ],
                                "id": 1229,
                                "name": "TupleExpression",
                                "src": "236:27:3"
                              }
                            ],
                            "id": 1230,
                            "name": "BinaryOperation",
                            "src": "230:33:3"
                          }
                        ],
                        "id": 1231,
                        "name": "FunctionCall",
                        "src": "212:52:3"
                      }
                    ],
                    "id": 1232,
                    "name": "ExpressionStatement",
                    "src": "212:52:3"
                  }
                ],
                "id": 1233,
                "name": "Block",
                "src": "202:87:3"
              }
            ],
            "id": 1234,
            "name": "FunctionDefinition",
            "src": "152:137:3"
          }
        ],
        "id": 1235,
        "name": "ContractDefinition",
        "src": "122:169:3"
      }
    ],
    "id": 1236,
    "name": "SourceUnit",
    "src": "40:252:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6"
  },
  "networks": {
    "69": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x7c6908A2a1023f17E34dA728BB4E9B2D94dd8C7E",
      "transactionHash": "0x5e238ea5e422210448fedf285d35f36792f35215b1fd81e45b5593da35bd7a8b"
    },
    "420": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x68dfB4CcE410980aE6bB0e4ADcd531Af01f7Ac14",
      "transactionHash": "0xaee844d3db2096ba88058db2bfcedda8458611be7271ce73745eaca8f3e2a199"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-26T15:38:33.977Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}